import {rand} from "./modules.js";const rgbs = [...document.querySelectorAll(".rgb")];const hex = document.querySelector("#hex");const colorPreview = document.querySelector(".colorPreview");const randomBtn = document.querySelector("#random");[...rgbs, hex].forEach(e => {    e.addEventListener("input", input);});colorPreview.addEventListener("input", event => {    let hexColor = colorPreview.value.slice(1);    let rgbColor = hexToRgb(hexColor)    setHex(hexColor);    setRgb(rgbColor);});randomBtn.addEventListener("click", event => {    let rgb = [        rand(0, 255),        rand(0, 255),        rand(0, 255)    ];    let hexColor = rgbToHex(rgb);    setHex(hexColor);    setRgb(rgb);});function setRgb(rgbColor){    rgbs.forEach((elem, i) => {        elem.value = rgbColor[i];    });    setBoxColor(rgbColor);}function getRgb(){    let rgb = [];    rgbs.forEach(e => {        if (e.value.length >= 3) e.value = e.value.slice(0, 3);        let color = +e.value||0;        rgb.push(color);        e.value = color;    });    return rgb;}function setHex(hexColor){    hex.value = hexColor;    setBoxColor(hexColor);}function setBoxColor(hex){    if (Array.isArray(hex)){        colorPreview.value = "#" + rgbToHex(hex);    } else {        while(hex.length < 6) hex += "0";        colorPreview.value = "#" + hex;    }}function input(event){    let elem = event.target;    let color = "";    if (elem === hex){        let rgbColor = hexToRgb(elem.value);        setRgb(rgbColor);        color = elem.value;    } else if (rgbs.includes(elem)){        let rgb = getRgb();        color = rgbToHex(rgb);        hex.value = color;    }    setBoxColor(color);}function parseRgb(rgb){    return `rgb(${rgb.join(", ")})`;}window.copyColor = function copyColor(type){    let color = "";    if (type === "hex"){        color = "#" + (hex.value || "000000");        navigator.clipboard.writeText(color);    } else if (type === "rgb"){        let rgb = rgbs.map(e => e.value || 0);        color = parseRgb(rgb);        navigator.clipboard.writeText(color);    }    Swal.fire(        color,        'Скопировано!'    );}function componentToHex(c) {    if (!c) return "00";    let hex = c.toString(16);    return hex.length === 1 ? "0" + hex : hex;}function rgbToHex(rgb) {    return componentToHex(rgb[0]) + componentToHex(rgb[1]) + componentToHex(rgb[2]);}function hexToRgb(hex) {    let bigint = parseInt(hex, 16);    let r = (bigint >> 16) & 255;    let g = (bigint >> 8) & 255;    let b = bigint & 255;    return [r,  g, b];}