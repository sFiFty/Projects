export function View(elem, nodes){    let childs = elem.children;    let fragment = document.createDocumentFragment();    for (let i = 0; i < nodes.length; i++){        let item = childs[i];        let item2 = nodes[i];        if (!item) {            fragment.append(item2);            continue;        }        if (item.outerHTML === item2.outerHTML) continue;        let allChilds = getAllChilds(item);        let allChilds2 = getAllChilds(item2);        let allChildsLen = allChilds.length;        let allChildsLen2 = allChilds2.length;        if (allChildsLen !== allChildsLen2){            elem.replaceChild(item2, item);            continue;        }        for (let i = 0; i < allChildsLen; i++){            if (allChilds[i].nodeName === "#text"){                if (allChilds[i].data !== allChilds2[i].data){                    allChilds[i].data = allChilds2[i].data;                }            } else {                attrs(allChilds[i], allChilds2[i]);            }        }    }    if (fragment.children.length > 0) elem.append(fragment);    function getAllChilds(elem, arr=[]){        let nodes = elem.childNodes;        let len = nodes.length;        for (let i = 0; i < len; i++){            let item = nodes[i];            arr.push(item);            getAllChilds(item, arr);        }        return arr;    }    function attrs(elem1, elem2){        let attrsSet = new Set();        attrsSet.add(...elem1.getAttributeNames());        attrsSet.add(...elem2.getAttributeNames());        let arr = [...attrsSet]        for (let i = 0; i < arr.length; i++) {            if (!arr[i]) continue;            let val1 = elem1.getAttribute(arr[i]);            let val2 = elem2.getAttribute(arr[i]);            if (val1 !== val2){                elem1.setAttribute(arr[i], val2);            }        }    }}export function toHTML(str){    let div = document.createElement("div");    div.innerHTML = str;    let {children} = div;    return children.length > 1 ? children : children[0];}export function rand(num1, num2){    return Math.round(Math.random() * (num2-num1) + num1);}