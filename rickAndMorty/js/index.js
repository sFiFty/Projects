import {toHTML, View} from "../../globalJs/modules.js";let page = +window.location.hash.slice(1) || 1;if (!page || page <= 0){    window.location.hash = "#1";    window.location.reload();}let countPages = Infinity;const container = document.querySelector(".container");const preloader = document.querySelector(".preloader");const nextBtn = document.querySelector(".next");const prevBtn = document.querySelector(".previous");const $info = document.querySelector(".info");nextBtn.onclick = nextPage;prevBtn.onclick = prevPage;let Model = {    request(url){        return fetch("https://rickandmortyapi.com/api/" + url).then(e => e.json());    },    episode(num){        return this.request("episode/" + num);    },    page(num){        return this.request("character/?page=" + num);    }};function personComponent(data){    return toHTML(`        <div class="person">            <img onclick="{{ fn }}" draggable="false" src="{{ image }}" width="200" alt="">            <div class="person_container">                <p class="person__title">{{ name }}</p>                <div style="display: flex; margin-top: 10px;">                    <div class="person__status {{ status }}"></div>                    <p class="person__status__text">{{ status }} - {{ species }}</p>                </div>                <div>                    <p class="person__location__title unselectable">Last known location:</p>                    <p class="person__location__text">{{ locationName }}</p>                </div>                <div>                    <p class="person__location__title unselectable">First seen in:</p>                    <p class="person__location__text">{{ firstSeen }}</p>                </div>            </div>        </div>    `, {        ...data,        locationName: data.location.name,        fn(){            console.log("gg");        }    });}function nextPage(){    page++;    checkPages();    render();}function prevPage(){    page--;    checkPages();    render();}function checkPages(){    // reset disabled    prevBtn.disabled = false;    nextBtn.disabled = false;    if (page < 2){        prevBtn.disabled = true;    }    if (page >= countPages){        nextBtn.disabled = true;    }    window.location.hash = "#" + page;}async function render(){    showPreloader();    let data = await Model.page(page);    let {info, results} = data;    if (!info){        window.location.hash = "#1";        window.location.reload();    }    countPages = info.pages;    checkPages();    $info.textContent = `${page}/${countPages}`;    for (let i = 0; i < results.length; i++){        results[i].firstSeen = await fetch(results[i].episode[0])            .then(e => e.json())            .then(e => e.name);    }    let nodes = results.map(personComponent);    await Promise.all(        nodes.map(node =>            new Promise(resolve => {                node.querySelector("img").onload = resolve;            })        )    );    View(container, nodes);    setTimeout(hidePreloader, 300);}function showPreloader(){    let img = preloader.querySelector("img");    let src = img.src;    // restart gif    img.src = "";    img.src = src;    preloader.hidden = false;    document.body.style.overflow = "hidden";}function hidePreloader(){    preloader.hidden = true;    document.body.style.overflow = "";    window.scrollTo(0, 0);}render();